<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc maxdepth="4"?>
<?asciidoc-numbered?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>distribution-examples (0.0.1)</title>
<date>2018-08-08 21:50:12 UTC</date>
<author>
<personname>
<firstname>Maksim</firstname>
<surname>Kostromin</surname>
</personname>
<email>daggerok@gmail.com</email>
</author>
<authorinitials>MK</authorinitials>
<revhistory>
<revision>
<revnumber>0.0.1</revnumber>
<date>2018-08-08 21:50:12 UTC</date>
<authorinitials>MK</authorinitials>
</revision>
</revhistory>
</info>
<preface>
<title></title>
<simpara>Travis CI status:
<inlinemediaobject>
<imageobject>
<imagedata fileref="https://travis-ci.org/daggerok/distribution-examples.svg?branch=master"/>
</imageobject>
<textobject><phrase>Build Status</phrase></textobject>
</inlinemediaobject></simpara>
</preface>
<chapter xml:id="introduction">
<title>Introduction</title>
<simpara>Read <link xl:href="https://daggerok.github.io/distribution-examples">project reference documentation</link></simpara>
<simpara>Initially generated by using <link xl:href="https://github.com/daggerok/generator-jvm/">generator-jvm</link> yeoman generator (kotlin-parent-multi-project)</simpara>
</chapter>
<chapter xml:id="implementation">
<title>Implementation</title>
<section xml:id="artifactory-gradle-example">
<title>artifactory-gradle-example</title>
<formalpara>
<title>bootstrap artifactory (docker)</title>
<para>
<programlisting language="bash" linenumbering="unnumbered">docker run --name artifactory -d -p 80:8081 -v $(pwd)/artifactory:/var/opt/jfrog/artifactory docker.bintray.io/jfrog/artifactory-oss:6.1.0</programlisting>
</para>
</formalpara>
<formalpara>
<title>follow wizard to setup artifactory</title>
<para>
<programlisting language="bash" linenumbering="unnumbered"># create gradle-defaul repository: 'gradle-releases'</programlisting>
</para>
</formalpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="./images/artifactory-gradle-example.png"/>
</imageobject>
<textobject><phrase>artifactory gradle example</phrase></textobject>
</mediaobject>
</informalfigure>
<formalpara>
<title>configure gradle project properties</title>
<para>
<programlisting language="properties" linenumbering="unnumbered"></programlisting>
</para>
</formalpara>
<formalpara>
<title>file: <literal>build.gradle</literal></title>
<para>
<programlisting language="gradle" linenumbering="unnumbered">plugins {
  id 'com.jfrog.artifactory' version '4.7.5' apply false
  // ...
}
apply from: "$projectDir/gradle/artifactory.gradle"</programlisting>
</para>
</formalpara>
<formalpara>
<title>file: <literal>gradle/artifactory.gradle</literal></title>
<para>
<programlisting language="gradle" linenumbering="unnumbered">apply plugin: 'java'

project.javadoc.failOnError = false

task sourcesJar(type: Jar) {
  from sourceSets.main.allJava
  classifier 'sources'
}

task javadocJar(type: Jar) {
  from javadoc
  classifier 'javadoc'
}

artifacts {

}

apply plugin: 'maven-publish'

publishing {
  publications {
    mavenJava(MavenPublication) { publication -&gt;
      afterEvaluate {
        project.shadow.component(publication)
        artifact sourcesJar
        artifact javadocJar
        //artifactId = jar.baseName

        pom {
          name = project.name
          description = project.description
          url = "https://github.com/daggerok/$project.name" as String
          licenses {
            license {
              name = 'MIT License'
              url = "https://github.com/daggerok/${project.name}/blob/master/LICENSE" as String
            }
          }
          developers {
            developer {
              id = 'daggerok'
              name = 'Maksim Kostromin'
              email = 'daggerok@gmail.com'
            }
          }
          scm {
            connection = "scm:git:git://github.com/daggeropk/${project.name}.git" as String
            developerConnection = "scm:git:ssh://github.com/daggeropk/${project.name}.git" as String
            url = "http://github.com/daggeropk/$project.name" as String
          }
        }
      }
    }
  }
}

apply plugin: 'com.jfrog.artifactory'

artifactory {
  contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
  publish {
    repository {
      repoKey = 'gradle-releases'
      username = "${artifactory_user}"
      password = "${artifactory_password}"
      maven = true
    }
    defaults {
      publishBuildInfo = false
      publishIvy = false
      publishPom = true
      publishConfigs('archives')
      //doesn't work?
      //publishArtifacts = true
      publications('mavenJava')
      publishArtifacts = true
      properties = [
          'ololo': 'trololo',
          'Deployed By': System.properties['user.name'],
      ]
    }
  }
  resolve {
    repository {
      repoKey = 'gradle-release'
      username = "${artifactory_user}"
      password = "${artifactory_password}"
      maven = true
    }
  }

  clientConfig.includeEnvVars = true
  clientConfig.envVarsExcludePatterns = '*pwd*,*password*,*PWD*,*PASSWORD*,*Password,*secret*,*SECRET*,*key*,*KEY*,sonar.login'
  clientConfig.info.buildName = project.name
  clientConfig.info.buildNumber = version
}</programlisting>
</para>
</formalpara>
<formalpara>
<title>publish artifacts to artifactory</title>
<para>
<programlisting language="bash" linenumbering="unnumbered">./gradlew assemble artifactoryPublish</programlisting>
</para>
</formalpara>
</section>
<section xml:id="artifactory-maven-repo-gradle-example">
<title>artifactory-maven-repo-gradle-example</title>
<formalpara>
<title>bootstrap artifactory (docker)</title>
<para>
<programlisting language="bash" linenumbering="unnumbered">docker run --name artifactory -d -p 80:8081 -v $(pwd)/artifactory:/var/opt/jfrog/artifactory docker.bintray.io/jfrog/artifactory-oss:6.1.0</programlisting>
</para>
</formalpara>
<simpara>configure artifactory</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="./images/artifactory-maven-repo-gradle-example-01.png"/>
</imageobject>
<textobject><phrase>artifactory maven repo gradle example 01</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>skip password configuration</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="./images/artifactory-maven-repo-gradle-example-02.png"/>
</imageobject>
<textobject><phrase>artifactory maven repo gradle example 02</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>skip proxy configuration</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="./images/artifactory-maven-repo-gradle-example-03.png"/>
</imageobject>
<textobject><phrase>artifactory maven repo gradle example 03</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>create maven default repository</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="./images/artifactory-maven-repo-gradle-example-04.png"/>
</imageobject>
<textobject><phrase>artifactory maven repo gradle example 04</phrase></textobject>
</mediaobject>
</informalfigure>
<simpara>we interested in 'libs-release-local' and 'libs-snapshot-local'</simpara>
<informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="./images/artifactory-maven-repo-gradle-example-05.png"/>
</imageobject>
<textobject><phrase>artifactory maven repo gradle example 05</phrase></textobject>
</mediaobject>
</informalfigure>
<formalpara>
<title>configure gradle project properties</title>
<para>
<programlisting language="properties" linenumbering="unnumbered">artifactory_user=admin
#artifactory_password=password
artifactory_password=AP9nMJd5Cyv1fzHk9BBHomJKUEe
artifactory_contextUrl=http://127.0.0.1/artifactory</programlisting>
</para>
</formalpara>
<formalpara>
<title>file: <literal>build.gradle</literal></title>
<para>
<programlisting language="gradle" linenumbering="unnumbered">plugins {
  id 'com.jfrog.artifactory' version '4.7.5' apply false
  // ...
}
apply from: "$projectDir/gradle/artifactory.gradle"</programlisting>
</para>
</formalpara>
<formalpara>
<title>file: <literal>gradle/artifactory.gradle</literal></title>
<para>
<programlisting language="gradle" linenumbering="unnumbered">apply plugin: 'java'

project.javadoc.failOnError = false

task sourcesJar(type: Jar) {
  from sourceSets.main.allJava
  classifier 'sources'
}

task javadocJar(type: Jar) {
  from javadoc
  classifier 'javadoc'
}

apply plugin: 'maven-publish'

distributions {
  main {
    contents {
      from('build/libs') {
        include '**/*.*'
      }
      from('build/install') {
        include '**/*.*'
      }
      into('.')
    }
  }
}

distZip.dependsOn(installDist, jar)

publishing {
  publications {
    mavenJava(MavenPublication) { publication -&gt;
      afterEvaluate {
        project.shadow.component(publication)
        artifact sourcesJar
        artifact javadocJar
        //artifactId = jar.baseName
        //artifact makeZip

        pom {
          name = project.name
          description = project.description
          url = "https://github.com/daggerok/$project.name" as String
          licenses {
            license {
              name = 'MIT License'
              url = "https://github.com/daggerok/${project.name}/blob/master/LICENSE" as String
            }
          }
          developers {
            developer {
              id = 'daggerok'
              name = 'Maksim Kostromin'
              email = 'daggerok@gmail.com'
            }
          }
          scm {
            connection = "scm:git:git://github.com/daggeropk/${project.name}.git" as String
            developerConnection = "scm:git:ssh://github.com/daggeropk/${project.name}.git" as String
            url = "http://github.com/daggeropk/$project.name" as String
          }
        }
      }
    }
  }
}

apply plugin: 'com.jfrog.artifactory'

artifactory {

  contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver

  publish {

    repository {
      repoKey = 'libs-release-local'
      username = "${artifactory_user}"
      password = "${artifactory_password}"
      maven = true
    }

    defaults {
      publishBuildInfo = false
      publishIvy = false
      publishPom = true
      publishConfigs('archives')
      //doesn't work?
      //publishArtifacts = true
      publications('mavenJava')
      publishArtifacts = true
      properties = [
          'ololo': 'trololo',
          'Deployed By': System.properties['user.name'],
      ]
    }
  }

  resolve {
    repository {
      repoKey = 'libs-release-local'
      username = "${artifactory_user}"
      password = "${artifactory_password}"
      maven = true
    }
  }

  clientConfig.includeEnvVars = true
  clientConfig.envVarsExcludePatterns = '*pwd*,*password*,*PWD*,*PASSWORD*,*Password,*secret*,*SECRET*,*key*,*KEY*,sonar.login'
  clientConfig.info.buildName = project.name
  clientConfig.info.buildNumber = version
}</programlisting>
</para>
</formalpara>
<formalpara>
<title>publish artifacts to artifactory</title>
<para>
<programlisting language="bash" linenumbering="unnumbered">./gradlew assemble artifactoryPublish</programlisting>
</para>
</formalpara>
</section>
</chapter>
<chapter xml:id="links">
<title>Links</title>
<itemizedlist>
<listitem>
<simpara><link xl:href="https://www.youtube.com/watch?v=014ZXoJnDys">artifactory in docker</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="https://github.com/daggerok/distribution-examples">GitHub repo</link></simpara>
</listitem>
<listitem>
<simpara><link xl:href="https://daggerok.github.io/distribution-examples">GitHub pages</link></simpara>
</listitem>
</itemizedlist>
</chapter>
</book>